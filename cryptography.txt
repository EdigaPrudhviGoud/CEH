There are two types of cryptography :
Symmetric:  In symmetric cryptography both users have the same key to encrypt and decrypt the messages.
Asymmetric: In asymmetric cryptography the encryption and decryption keys are different. The encryption key can be used only for encryption, not for decryption and vice versa. The encryption key is called Public key and the decryption key is called Private key.

Why is asymmetric cryptography used?
Well..because it's more secure! If you are using symmetric cryptography and someone takes your key he can encrypt and decrypt messages that you send. While in asymmetric cryptography he can't decrypt the messages you encrypted with the public key. Only the holder of the Private key can decrypt them. Let's give an example :
Alice wants to talk to Google
Google gives Alice the Public key.
Alice encrypts her message with the public key and sends it to Google.
Google decrypts the message with his private key and sends back what Alice wanted.
And that's how the conversation goes...
Note : Symmetric cryptography is faster than asymmetric, but asymmetric is more secure.

Hashes are a long strings of letters and numbers generated by hashing algorithms. They take plain text and make it a hash.
The important thing about hashes is that they are not reversible. There's no way to decrypt/decode a hash.
Popular hashing algorithms are : MD5 (Message Digest 5) and SHA (Secure Hash Algorithm).
That's how the word "hello" looks as MD5 hash : 5d41402abc4b2a76b9719d911017c592

MD5 hashes are also used to ensure the data integrity of files. Because the MD5 hashing algorithm always produces the same output for the same given input, it can be used to compare a hash of the source file with a newly created hash of the destination file to check that it is intact and unmodified.

https://tryhackme.com/r/room/cryptographyintro

1.Symmetric encryption, such as AES -> The Advanced Encryption Standard (AES) is a symmetric block encryption algorithm. It can use cryptographic keys of sizes 128, 192, and 256 bits.
2.Asymmetric encryption, such as RSA
3.Diffie-Hellman Key Exchange
4.Hashing
5.PKI -> Public Key Infrastructure (PKI) makes it possible for different entities to communicate securely over a network. Consequently, we can protect the confidentiality and integrity of the communications, among other aspects.

Caesar Cipher shifts the letter by a fixed number of places to the left or to the right. Consider the case of shifting by 3 to the right to encrypt,
Caesar cipher is considered a substitution cipher because each letter in the alphabet is substituted with another.

We don’t really need to use the encryption key to decrypt the received ciphertext, “Uyv sxd gyi siqvw x sinduxjd pvzjdw po axffojdz xgxo wsxcc wuidvw.” As shown in the figure below, using a website such as quipqiup, it will take a moment to discover that the original text was “The man who moves a mountain begins by carrying away small stones.” This example clearly indicates that this algorithm is broken and should not be used for confidential communication.
https://www.quipqiup.com/

There are many programs available for symmetric encryption. We will focus on two, which are widely used for asymmetric encryption as well:
GNU Privacy Guard:
Encrypt a file -> 
    gpg --symmetric --cipher-algo CIPHER message.txt
O/P-> Encrypted file - message.txt.gpg
The default output is in the binary OpenPGP format;
For ASCII armoured output add the --armor option in the above command

Decrypt a file using GNU Privacy Guard:
gpg --output original_message.txt --decrypt message.gpg

OpenSSL Project:
Encrypt a file: openssl aes-256-cbc -e -in message.txt -out encrypted_message
Decrypt : openssl aes-256-cbc -d -in encrypted_message -out original_message.txt
-pbkdf2
-iter NUMBER
To make the encryption more secure and resilient against brute-force attacks, we can add -pbkdf2 to use the Password-Based Key Derivation Function 2 (PBKDF2); moreover, we can specify the number of iterations on the password to derive the encryption key using -iter NUMBER. To iterate 10,000 times.




